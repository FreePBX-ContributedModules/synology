#!/usr/bin/env php
<?php
    include_once '/etc/freepbx.conf';
    error_reporting(E_ALL);
    $syno = \FreePBX::Synologyactivebackupforbusiness();


    // ----------------- return run command---------------------

    // ------ Aun no se ha configurado la conexion con el servidor
    // # abb-cli -s
    // No connection found
    // # abb-cli -l
    // No connection found
    // # abb-cli -r
    // Failed to access connection config file
    // ------------------------




    // ------- Cuando ya estamos conectados a un servidor ---------------
    //

    // @@@ RECIEN CONECTADO SIN NINGUNA COPIA AUN
    //
    // # abb-cli -s
    // Server address: IP SERVER                        Username: UserName
    // Last backup time:  -                             Next backup time: 2021-08-20 01:00
    // Service Status: Idle
    //
    // Restore portal: https://ipserver.cerebelum.lan/?launchApp=SYNO.SDS.ActiveBackupPortal.Application&launchParam=device_id%fasdf
    //
    // For detailed activity logs, please refer to the system logs. Depending on the operating system of your Linux device, you can find the logs in var/log/message, var/log/syslog, or by entering the command journalctl.
    // Retrieved service status successfully
    //
    // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@



    // @@@ ULTIMA COPIA CANCELADA
    //
    // # /usr/bin/abb-cli -s
    // Server address: IP SERVER                        Username: UserName
    // Last backup time: 2021-08-18 03:00               Next backup time: 2021-08-19 03:00
    // Service Status: Idle - Canceled
    //
    // Restore portal: https://ipserver/?launchApp=SYNO.SDS.ActiveBackupPortal.Application&launchParam=device_id%fasdf
    //
    // For detailed activity logs, please refer to the system logs. Depending on the operating system of your Linux device, you can find the logs in var/log/message, var/log/syslog, or by entering the command journalctl.
    // Retrieved service status successfully
    //
    // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@



    // @@@ ULTIMA COPIA OK 
    //
    // # /usr/bin/abb-cli -s
    // Server address: IP SERVER                        Username: UserName
    // Last backup time: 2021-08-18 03:00               Next backup time: 2021-08-19 03:00
    // Service Status: Idle - Completed
    //
    // Restore portal: https://ipserver/?launchApp=SYNO.SDS.ActiveBackupPortal.Application&launchParam=device_id%fasdf
    //
    // For detailed activity logs, please refer to the system logs. Depending on the operating system of your Linux device, you can find the logs in var/log/message, var/log/syslog, or by entering the command journalctl.
    // Retrieved service status successfully
    //
    // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

    

    // @@@ COPIA EN CURSO.....
    //
    // # /usr/bin/abb-cli -s
    // Server address: IP SERVER                        Username: UserCopias
    // Last backup time: 2021-08-18 14:26               Next backup time:  -
    // Service Status: Backing up... - 8.31 MB / 9.57 MB (576.00 KB/s)
    //
    // Restore portal: https://ipserver/?launchApp=SYNO.SDS.ActiveBackupPortal.Application&launchParam=device_id%fasdf
    //
    // For detailed activity logs, please refer to the system logs. Depending on the operating system of your Linux device, you can find the logs in var/log/message, var/log/syslog, or by entering the command journalctl.
    // Retrieved service status successfully
    //
    // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@



    // @@@ EL AGENTE HA SIDO BORRADO DEL SERVIDOR
    //
    // # abb-cli -s
    // Server address: IP SERVER                        Username: UserCopias
    // Last backup time:  -                             Next backup time:  -
    // Service Status: Idle

    // Restore portal:  -

    // For detailed activity logs, please refer to the system logs. Depending on the operating system of your Linux device, you can find the logs in var/log/message, var/log/syslog, or by entering the command journalctl.
    // Retrieved service status successfully
    //
    // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@



    // ----------------- return ---------------------


    $data_return = $syno->getAgentStatusDefault();
    $file = $syno->getHookFilename("status");
    if (file_exists($file)) { unlink($file); }


    if (! $syno->isAgentInstalled())
    {
        $data_return['error_code'] = 501;
        $data_return['error_msg'] = _("Synology Agent not Installed!");
    }
    else
    {
        $cmd = $syno->getABBCliPath() . " -s 2>&1";
        exec($cmd, $out, $ret);
        $data_return['exec_ret'] = $ret;

        if (! in_array($ret, array(0, 5), true))
        {
            $data_return['error_code'] = 503;
            $data_return['error_msg'] = _("Synology Agent return code not controlled!");
        }
        elseif ( ! is_array($out) )
        {
            $data_return['error_code'] = 502;
            $data_return['error_msg'] = _("Synology Agent not return info!");
        }
        else
        {
            foreach($out as $line)
            {
                if (empty($line))
                {
                    continue;
                }
                
                if ( $line == 'No connection found' )
                {
                    $data_return['server_status'] = $line;
                    continue;
                }

                if (strpos($line, 'Service Status:') !== false)
                {
                    $data_return['server_status'] = trim(explode(":", $line, 2)[1]);
                    continue;
                }

                if (strpos($line, 'Restore portal:') !== false)
                {
                    $data_return['portal'] = trim(explode(":", $line, 2)[1]);
                    continue;
                }

                if (strpos($line, 'Server address:') !== false)
                {
                    $data_return['server'] = substr($line, 0, strpos($line, 'Username:'));
                    $data_return['server'] = trim(explode("Server address:", $data_return['server'], 2)[1]);
                }        

                if (strpos($line, 'Username:') !== false)
                {
                    $data_return['user'] = trim(explode("Username:", $line, 2)[1]);
                }

                if (strpos($line, 'Last backup time:') !== false)
                {
                    $data_return['lastbackup'] = substr($line, 0, strpos($line, 'Next backup time:'));
                    $data_return['lastbackup'] = trim(explode("Last backup time:", $data_return['lastbackup'], 2)[1]);
                }

                if (strpos($line, 'Next backup time:') !== false)
                {
                    $data_return['nextbackup'] = trim(explode("Next backup time:", $line, 2)[1]);
                }
            }
            $data_return['error_code'] = 0;
        }
    }

    file_put_contents($file, json_encode($data_return));
    chown($file, 'asterisk');

    if ($data_return['error_code'] != 0)
    {
        $syno->logger->error( sprintf("Synology ABB / hook / get-cli-status - Error Code (%s): %s", $data_return['error_code'], $data_return['error_msg']) ) ;
    }

    // dbug($data_return);
    // print_r($data_return);
    // echo "\n";
    exit();
?>

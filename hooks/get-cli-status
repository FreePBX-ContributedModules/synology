#!/usr/bin/env php
<?php
    // ----------------- return run command---------------------

    // ------ Aun no se ha configurado la conexion con el servidor
    // # abb-cli -s
    // No connection found
    // # abb-cli -l
    // No connection found
    // # abb-cli -r
    // Failed to access connection config file
    // ------------------------




    // ------- Cuando ya estamos conectados a un servidor ---------------
    //

    // @@@ RECIEN CONECTADO SIN NINGUNA COPIA AUN
    //
    // # abb-cli -s
    // Server address: IP SERVER                        Username: UserName
    // Last backup time:  -                             Next backup time: 2021-08-20 01:00
    // Service Status: Idle
    //
    // Restore portal: https://ipserver.cerebelum.lan/?launchApp=SYNO.SDS.ActiveBackupPortal.Application&launchParam=device_id%fasdf
    //
    // For detailed activity logs, please refer to the system logs. Depending on the operating system of your Linux device, you can find the logs in var/log/message, var/log/syslog, or by entering the command journalctl.
    // Retrieved service status successfully
    //
    // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@



    // @@@ ULTIMA COPIA CANCELADA
    //
    // # /usr/bin/abb-cli -s
    // Server address: IP SERVER                        Username: UserName
    // Last backup time: 2021-08-18 03:00               Next backup time: 2021-08-19 03:00
    // Service Status: Idle - Canceled
    //
    // Restore portal: https://ipserver/?launchApp=SYNO.SDS.ActiveBackupPortal.Application&launchParam=device_id%fasdf
    //
    // For detailed activity logs, please refer to the system logs. Depending on the operating system of your Linux device, you can find the logs in var/log/message, var/log/syslog, or by entering the command journalctl.
    // Retrieved service status successfully
    //
    // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@



    // @@@ ULTIMA COPIA OK 
    //
    // # /usr/bin/abb-cli -s
    // Server address: IP SERVER                        Username: UserName
    // Last backup time: 2021-08-18 03:00               Next backup time: 2021-08-19 03:00
    // Service Status: Idle - Completed
    //
    // Restore portal: https://ipserver/?launchApp=SYNO.SDS.ActiveBackupPortal.Application&launchParam=device_id%fasdf
    //
    // For detailed activity logs, please refer to the system logs. Depending on the operating system of your Linux device, you can find the logs in var/log/message, var/log/syslog, or by entering the command journalctl.
    // Retrieved service status successfully
    //
    // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

    

    // @@@ COPIA EN CURSO.....
    //
    // # /usr/bin/abb-cli -s
    // Server address: IP SERVER                        Username: UserCopias
    // Last backup time: 2021-08-18 14:26               Next backup time:  -
    // Service Status: Backing up... - 8.31 MB / 9.57 MB (576.00 KB/s)
    //
    // Restore portal: https://ipserver/?launchApp=SYNO.SDS.ActiveBackupPortal.Application&launchParam=device_id%fasdf
    //
    // For detailed activity logs, please refer to the system logs. Depending on the operating system of your Linux device, you can find the logs in var/log/message, var/log/syslog, or by entering the command journalctl.
    // Retrieved service status successfully
    //
    // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@



    // @@@ EL AGENTE HA SIDO BORRADO DEL SERVIDOR
    //
    // # abb-cli -s
    // Server address: IP SERVER                        Username: UserCopias
    // Last backup time:  -                             Next backup time:  -
    // Service Status: Idle

    // Restore portal:  -

    // For detailed activity logs, please refer to the system logs. Depending on the operating system of your Linux device, you can find the logs in var/log/message, var/log/syslog, or by entering the command journalctl.
    // Retrieved service status successfully
    //
    // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@



    // @@@ EL DISPOSITIVO HA SIDO ELIMINADO EN EL SERVIDOR
    //
    // # abb-cli -s
    // Server address: IP SERVER                        Username: UserCopias
    // Last backup time:  -                             Next backup time:  -
    // Service Status: ErrorÂ  - The current device has been removed from the server. Please contact your administrator for further assistance.

    // Restore portal:  -

    // For detailed activity logs, please refer to the system logs. Depending on the operating system of your Linux device, you can find the logs in var/log/message, var/log/syslog, or by entering the command journalctl.
    // Retrieved service status successfully
    //
    // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


    // ----------------- return ---------------------


    include __DIR__."/hook.parse.args.php";
    $v = new \FreePBX\modules\Synologyactivebackupforbusiness\ParseArgs($argv, __FILE__);
    $settings = $v->getSettingAll();


    include_once '/etc/freepbx.conf';
    error_reporting(E_ALL);
    $syno = \FreePBX::Synologyactivebackupforbusiness();

    $error_code  = $syno::ERROR_NOT_DEFINED;
    $data_return = array(
        'error' => array(),
        'exec'  => array(),
        'data' => $syno->getAgentStatusDefault(),
        'hook'  => array(
            'token' => $settings['hook_token'],
            'file'  => $settings['hook_file'],
            'status'=> 'RUN',
        ),
    );

    $file = $syno->getHookFilename($settings['hook_file'], $settings['hook_token']);
    if (file_exists($file))
    {
		$msg_err = _("Hook is already running, process aborting.");
        $v->sendSyslog($msg_err);
        throw new \Exception($msg_err);
    }
    $syno->writeFileHook($file, $data_return);

    if (! $syno->isAgentInstalled())
    {
        $error_code = $syno::ERROR_AGENT_NOT_INSTALLED;
    }
    else
    {
        $cmd = $syno->getABBCliPath() . " -s 2>&1";
        exec($cmd, $out, $ret);

        $data_return['exec'] = array('cmd' => $cmd, 'ret' => $ret, 'out' => $out);

        if (! is_array($out))
        {
            $error_code = $syno::ERROR_AGENT_NOT_RETURN_INFO;
        }
        elseif (! in_array($ret, array(0, 5), true))
        {
            $error_code = $syno::ERROR_AGENT_ENDED_IN_ERROR;
        }
        else
        {
            foreach($out as $line)
            {
                if (empty($line)) { continue; }
                
                if ( $line == 'No connection found' )
                {
                    $data_return['data']['server_status'] = $line;
                    continue;
                }

                if (strpos($line, 'Service Status:') !== false)
                {
                    $data_return['data']['server_status'] = trim(explode(":", $line, 2)[1]);
                    continue;
                }

                if (strpos($line, 'Restore portal:') !== false)
                {
                    $new_value = trim(explode(":", $line, 2)[1]);
                    if ( $new_value != "-")
                    {
                        $data_return['data']['portal'] = $new_value;
                    }
                    unset($new_value);
                    continue;
                }

                if (strpos($line, 'Server address:') !== false)
                {
                    $data_return['data']['server'] = substr($line, 0, strpos($line, 'Username:'));
                    $data_return['data']['server'] = trim(explode("Server address:", $data_return['data']['server'], 2)[1]);
                }        

                if (strpos($line, 'Username:') !== false)
                {
                    $data_return['data']['user'] = trim(explode("Username:", $line, 2)[1]);
                }

                if (strpos($line, 'Last backup time:') !== false)
                {
                    $new_value = substr($line, 0, strpos($line, 'Next backup time:'));
                    $new_value = trim(explode("Last backup time:", $new_value, 2)[1]);
                    if ( $new_value != "-")
                    {
                        $data_return['data']['lastbackup'] = $new_value;
                    }
                    unset($new_value);
                }

                if (strpos($line, 'Next backup time:') !== false)
                {
                    $new_value = trim(explode("Next backup time:", $line, 2)[1]);
                    if ( $new_value != "-")
                    {
                        $data_return['data']['nextbackup'] = $new_value;
                    }
                    unset($new_value);
                }
            }

            $error_code = $syno::ERROR_ALL_GOOD;
        }
    }

    $data_return['error'] = $syno->getErrorMsgByErrorCode($error_code, true);
    $data_return['hook']['status'] = 'END';

    if ($error_code !== $syno::ERROR_ALL_GOOD)
    {
        $syno->logger->error( sprintf("%s - Code (%s): %s", __FILE__, $error_code, $data_return['error']['msg']) ) ;
    }

    $syno->writeFileHook($file, $data_return);

    // dbug($data_return);

    exit();
?>